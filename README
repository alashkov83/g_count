Additional programs for analysis of Gromacs output.
Oliver Beckstein <oliver@bioch.ox.ac.uk
$Id: README,v 1.3 2004/01/29 15:18:11 oliver Exp $

You've got two options to compile; the first one (a) is probably
easier:

(a) compile the programs using the Makefile in our top directory; this
    requires having installed diverse Gromacs 3.0 libraries

    - edit Makefile (perhaps different BINdir path for install,
      location of the libgmx and libmd libraries and header files,
      ...)

    - compile the program(s)
      $ make <PROG>

    - install
      $ make install
    

or

(b) put these files into a gromacs-3.0.x source tree in the src
    directory. Then you can patch config.ac and automagikally (well,
    automake does it, but never mind) a Makefile will appear in
    biop_contrib which has 

    * correct setup to compile with shared libraries and everything
      similar to the standard g_* programs
    * correct paths for installation
    * ... [must have other advantages as well...]

    The procedure is:
    - move all source files into biop_contrib
      $ mv *.[ch] biop_contrib
   
    - put the whole directory into TOPDIR/src

    - patch TOPDIR/configure.ac in order to automatically rebuild Makefile.in:
      $ cd TOPDIR
      $ patch <src/biop_contrib/biop_contrib.patch

    - build Makefile.in from Makefile.am
      $ cd TOPDIR; automake
      
    - configure gromacs
      $ cd TOPDIR; ./configure [lots_of_options]
      or just run ./config.status if you've already configured it

    - compile gromacs (if you haven't done so)
      $ make
      
    - compile these programs with
      $ cd src/biop_contrib; make <PROGRAM>



Problems, Questions:

* What is the difference between GMX_TOP_DIR and MY_GMX_TOP_DIR?

> I use it to switch between installations; I think you can simply
> forget about MY_*. As you can see, GMX_TOP_DIR is used to define
> GMX_LIB_DIR and GMX_INCLUDE_DIR: that's where the Gromacs libraries
> libmd.a and libgmx.a and the include files live. If that's different
> for you then you have to change it

* Do I need the CVS version somewhere? Would it be better to
  reinstall gromacs 3.1.4 too?  

> No, you don't need the sources to compile, only libraries and
> includes.


* Missing X libraries, indicated by errors similar to the following:

>> gcc -o g_count g_count.o utilgmx.o xmgr.o count.o -lm
>> -L/usr/local/gromacs/i686-pc-linux-gnu/lib -lmd -lgmx
>> /usr/local/gromacs/i686-pc-linux-gnu/lib/libgmx.a(mgmx.o): In function
>> `gmx_gui':
>> mgmx.o(.text+0x29): undefined reference to
>> `applicationShellWidgetClass'
>> mgmx.o(.text+0x4c): undefined reference to `XtOpenApplication'
>> mgmx.o(.text+0x7c): undefined reference to `XtRealizeWidget'
>> /usr/local/gromacs/i686-pc-linux-gnu/lib/libgmx.a(mgmx.o): In function
>> `mk_gui':
>> mgmx.o(.text+0x1d5): undefined reference to `_XmStrings'
>> mgmx.o(.text+0x1f6): undefined reference to
>> `XmCreateFileSelectionDialog'
[...]

>  However, the errors you get look to me as if your gromacs libraries are
> also linked against X-Windows/Motif. I tend to switch it off on
> compilation, something --without-x (X is more hassle than help and ngmx
> doesn't get used anymore since vmd...).
>
> You might have to add the include path for X includes to CPPFLAGS, eg
> (no
> idea if it works)
>
> CPPFLAGS += -I/usr/X11R6/include
>
> and X libs to LDFLAGS
>
> LDFLAGS += -L//usr/X11R6/lib -lX11 -lXm -lXaw -lXpm




