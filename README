$Id: README,v 1.7 2009/06/08 16:42:06 oliver Exp $
Additional programs for analysis of Gromacs output.
Copyright (c) 2001-2009 Oliver Beckstein <oliver.beckstein@bioch.ox.ac.uk>

Contributors:
   Marc Baaden (xpm output in g_zcoord)

g_count, g_flux and g_zcoord are released under the GNU Public
License:

These programs are free software; you can redistribute them and/or
modify them under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 2 of the
License, or (at your option) any later version.

These programs are distributed in the hope that they will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
or find it online at http://www.gnu.org/copyleft/gpl.html



---------------------------------------------------------------
  THIS VERSION OF g_count ONLY COMPILES AGAINST GROMACS 4.0.x
---------------------------------------------------------------



Short introduction
==================

g_count simply counts the molecules within a cylinder aligned with a
coordinate axis.

g_flux calculates fluxes by analyzing the trajectories of molecules
passing through a cylinder.


[g_zcoord IS CURRENTLY BROKEN AND DOES NOT COMPILE]

g_zcoord simply writes out the z-coordinate of molecules in a
cylindrical region or makes a xpm matrix for quick visualization. You
may be able to do pretty much the same with g_traj and some
post-processing.  





Required software
=================

You must have a compiled version of Gromacs 4.0.2 (or probably later)
with all libraries and include files, and the appropriate
C-compiler. If you compiled Gromacs with X11 support see the end of
this README if you have problems.

Note that this software now requires at least Gromacs 4.0.x to
compile. This version is NOT backwards compatible. Use an older tar
ball (eg g_count_0.1.tar.bz2) for Gromacs 3.2.1 (there are no substantial
changes in the code itself) or g_count_0.1.tar.bz2 for Gromacs 3.3.3.



Installation
============

You've got two options to compile; the first one (a) is probably
easier:

(a) compile the programs using the Makefile in our top directory; this
    requires having installed diverse Gromacs 3.3.x libraries

    - edit Makefile (perhaps different BINdir path for install,
      location of the libgmx and libmd libraries and header files,
      ...)

    - compile the program(s)
      $ make <PROG>

    - install
      $ make install
    

or

(b) [THIS HAS NOT BEEN TESTED SINCE Gromacs 3.0]

    put these files into a gromacs-3.0.x source tree in the src
    directory. Then you can patch config.ac and automagikally (well,
    automake does it, but never mind) a Makefile will appear in
    biop_contrib which has 

    * correct setup to compile with shared libraries and everything
      similar to the standard g_* programs
    * correct paths for installation
    * X11 should work automatically if Gromacs was compiled with X11
      support

    The procedure is:
    - move all source files into biop_contrib
      $ mv *.[ch] biop_contrib
   
    - put the whole directory into TOPDIR/src

    - patch TOPDIR/configure.ac in order to automatically rebuild Makefile.in:
      $ cd TOPDIR
      $ patch <src/biop_contrib/biop_contrib.patch

    - build Makefile.in from Makefile.am
      $ cd TOPDIR; automake
      
    - configure gromacs
      $ cd TOPDIR; ./configure [lots_of_options]
      or just run ./config.status if you've already configured it

    - compile gromacs (if you haven't done so)
      $ make
      
    - compile these programs with
      $ cd src/biop_contrib; make <PROGRAM>



Problems, Questions
===================

* Gromacs 4.x: g_zcoord has not been adapted for gromacs 4.x; use
  g_traj.
  Versions of g_flux and g_count for 3.x were able to handle
  molecules; the current code base can only handle atoms. Use water
  oxygens when analysing water.

* Do I need the CVS version somewhere? Would it be better to
  reinstall gromacs 3.1.4 too?  

> No, you don't need the sources to compile, only libraries and
> include files.
> Just make sure that you point GMX_LIB_DIR to the directory where the
> libmd.a (or libmd.so) and libgmx.a (or .so) files are. The
> GMX_INCLUDE_DIR must point to the directory with the *.h files.



* Missing X libraries, indicated by errors similar to the following:

>> gcc -o g_count g_count.o utilgmx.o xmgr.o count.o -lm
>> -L/usr/local/gromacs/i686-pc-linux-gnu/lib -lmd -lgmx
>> /usr/local/gromacs/i686-pc-linux-gnu/lib/libgmx.a(mgmx.o): In function
>> `gmx_gui':
>> mgmx.o(.text+0x29): undefined reference to
>> `applicationShellWidgetClass'
>> mgmx.o(.text+0x4c): undefined reference to `XtOpenApplication'
>> mgmx.o(.text+0x7c): undefined reference to `XtRealizeWidget'
>> /usr/local/gromacs/i686-pc-linux-gnu/lib/libgmx.a(mgmx.o): In function
>> `mk_gui':
>> mgmx.o(.text+0x1d5): undefined reference to `_XmStrings'
>> mgmx.o(.text+0x1f6): undefined reference to
>> `XmCreateFileSelectionDialog'
[...]

>  However, the errors you get look to me as if your gromacs libraries are
> also linked against X-Windows/Motif. I tend to switch it off on
> compilation, something --without-x (X is more hassle than help and ngmx
> doesn't get used anymore since vmd...).
>
> You might have to add the include path for X includes to CPPFLAGS, eg
> (no idea if it works)
>
> CPPFLAGS += -I/usr/X11R6/include
>
> and X libs to LDFLAGS
>
> LDFLAGS += -L/usr/X11R6/lib -lX11 -lXm -lXaw -lXpm

* If compilation fails and error messages mention 'fatal.h' then you
  are compiling against the wrong version of Gromacs. Please see the
  top of this file for the compatible versions.


